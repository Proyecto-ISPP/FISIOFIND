# Generated by Django 5.1.6 on 2025-03-03 15:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('gestion_usuarios', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='appuser',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AlterModelManagers(
            name='appuser',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='appuser',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='appuser',
            name='is_admin',
        ),
        migrations.RemoveField(
            model_name='appuser',
            name='name',
        ),
        migrations.RemoveField(
            model_name='appuser',
            name='surname',
        ),
        migrations.RemoveField(
            model_name='appuser',
            name='updated_at',
        ),
        migrations.AddField(
            model_name='appuser',
            name='account_status',
            field=models.CharField(choices=[('ACTIVE', 'Active'), ('BANNED', 'Banned'), ('REMOVED', 'Removed')], default='ACTIVE', max_length=10),
        ),
        migrations.AddField(
            model_name='appuser',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AddField(
            model_name='appuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='password',
            field=models.CharField(max_length=128, verbose_name='password'),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='phone_number',
            field=models.CharField(max_length=9),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='postal_code',
            field=models.CharField(max_length=5),
        ),
        migrations.AlterField(
            model_name='appuser',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('age', models.PositiveIntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Physiotherapist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField()),
                ('autonomic_community', models.CharField(choices=[('ANDALUCIA', 'Andalucía'), ('ARAGON', 'Aragón'), ('ASTURIAS', 'Asturias'), ('BALEARES', 'Baleares'), ('CANARIAS', 'Canarias'), ('CANTABRIA', 'Cantabria'), ('CASTILLA Y LEON', 'Castilla y León'), ('CASTILLA-LA MANCHA', 'Castilla-La Mancha'), ('CATALUÑA', 'Cataluña'), ('EXTREMADURA', 'Extremadura'), ('GALICIA', 'Galicia'), ('MADRID', 'Madrid'), ('MURCIA', 'Murcia'), ('NAVARRA', 'Navarra'), ('PAIS VASCO', 'País Vasco'), ('LA RIOJA', 'La Rioja'), ('COMUNIDAD VALENCIANA', 'Comunidad Valenciana')], max_length=30)),
                ('rating_avg', models.FloatField()),
                ('schedule', models.JSONField()),
                ('birth_date', models.DateField()),
                ('collegiate_number', models.CharField(max_length=30, unique=True)),
                ('services', models.JSONField()),
                ('account_status', models.CharField(choices=[('ACTIVE', 'Active'), ('BANNED', 'Banned'), ('REMOVED', 'Removed')], default='ACTIVE', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='physio', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
