name: Generate Changelog and Tag

on:
  push:
    branches:
      - feat/changelog.yml

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para obtener todas las tags

      - name: Get latest tag
        id: get-latest-tag
        run: |
          latest_tag=$(git tag --sort=-v:refname | head -n 1)
          echo "Última tag encontrada: $latest_tag"
          if [[ -z "$latest_tag" ]]; then
            new_tag="1.0.0"
          else
            major=$(echo "$latest_tag" | cut -d. -f1)
            new_major=$((major + 1))
            new_tag="${new_major}.0.0"
          fi
          echo "NEW_TAG=$new_tag" >> $GITHUB_ENV
          echo "Nueva tag a crear: $new_tag"

      - name: Generate changelog
        id: generate-changelog
        run: |
          echo "## 🚀 Changelog - $NEW_TAG" > CHANGELOG.md
          echo "" >> CHANGELOG.md

          echo "### 🧠 Summary" >> CHANGELOG.md
          echo "**Generando resumen con IA...**" >> CHANGELOG.md
          echo "" >> CHANGELOG.md

          echo "### ✨ Features" >> CHANGELOG.md
          git log --pretty=format:"- %s (@%an)" --grep="^[Ff]eat" $(git tag --sort=-v:refname | head -n 1)..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md

          echo "### 🐛 Fixes" >> CHANGELOG.md
          git log --pretty=format:"- %s (@%an)" --grep="^[Ff]ix" $(git tag --sort=-v:refname | head -n 1)..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md

          echo "### 📖 Documentation" >> CHANGELOG.md
          git log --pretty=format:"- %s (@%an)" --grep="^[Dd]ocs" $(git tag --sort=-v:refname | head -n 1)..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md

          echo "### 🔀 Branch Merges" >> CHANGELOG.md
          git log --pretty=format:"- %s (@%an)" --grep="Merge branch" $(git tag --sort=-v:refname | head -n 1)..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md

          echo "### 📌 Pull Request Merges" >> CHANGELOG.md
          git log --pretty=format:"- %s (@%an)" --grep="Merge pull request" $(git tag --sort=-v:refname | head -n 1)..HEAD >> CHANGELOG.md
          echo "" >> CHANGELOG.md

          echo "### 🌀 Other Changes" >> CHANGELOG.md
          git log --pretty=format:"- %s (@%an)" --invert-grep --grep="^[Ff]eat" --grep="^[Ff]ix" --grep="^[Dd]ocs" --grep="Merge branch" --grep="Merge pull request" $(git tag --sort=-v:refname | head -n 1)..HEAD >> CHANGELOG.md

      - name: Install GitHub CLI Copilot extension
        env:
          GH_TOKEN: ${{ secrets.COPILOT_PAT }}
        run: gh extension install github/gh-copilot

      - name: Verify GitHub CLI Authentication
        env:
          GH_TOKEN: ${{ secrets.COPILOT_PAT }}
        run: gh auth status

      - name: Generate Changelog Summary with Copilot
        env:
          GH_TOKEN: ${{ secrets.COPILOT_PAT }}
        run: |
          SUMMARY=$(echo "Resume estos cambios en una frase: $(tail -n 20 CHANGELOG.md)" | gh copilot suggest)
          echo "Resumen generado: $SUMMARY"
          sed -i "s|**Generando resumen con IA...**|$SUMMARY|" CHANGELOG.md


      - name: Commit and push CHANGELOG.md
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "docs: update CHANGELOG for $NEW_TAG"
          git push

      - name: Create new tag
        run: |
          git tag $NEW_TAG
          git push origin $NEW_TAG
